/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
 
 buildscript {
  repositories { mavenCentral() }
  dependencies { classpath 'org.ajoberstar:gradle-git:0.2.3' }
}

import org.ajoberstar.gradle.git.tasks.*

project.ext.set("flutterRepo", "https://github.com/rajashah33/new_login2")
project.ext.set("bootRepo", "https://github.com/rugit/LoginModule")
project.ext.set("baseDir", System.getProperty("user.dir"))
 
task cloneFlutterRepo(type: GitClone){
def destination = file(project.baseDir.replace("\\","//")+'//new_login2')
uri = project.flutterRepo
destinationPath = destination
 bare = false
 enabled = !destination.exists()
}
 
 task cloneGitRepo(type: GitClone){
 def destination = file("F://Dithok//Intern//test//LoginModule")
 uri = "https://github.com/rugit/LoginModule"
 destinationPath = destination
 bare = false
 enabled = !destination.exists()
 }
 
 task serverBuild(type: GradleBuild){
 	dir = 'F://Dithok//Intern//test//LoginModule'
 	tasks = ['booRun']
 }
 
 task executeAPK(type: GradleBuild){
 dir = 'F://Dithok//craft//14-Sep//new_login2//new_login2//android'
 tasks = ['installDebug']
 /*doFirst{
 commandLine "cmd", "cd", "F://Dithok//craft//14-Sep//new_login2//new_login2"
 }*/
 /*exec {
 workingDir "F://Dithok//craft//14-Sep//new_login2//new_login2"
 commandLine "cmd", "flutter", "run"
 }*/
  }
  
  task setupDev {
    dependsOn 'cloneGitRepo'
    dependsOn 'serverBuild'
    tasks.findByName('serverBuild').mustRunAfter 'cloneGitRepo'
    //tasks.findByName('publish').mustRunAfter 'build'
}

task setupAndroid{
dependsOn 'cloneFlutterRepo'
dependsOn 'executeAPK'
tasks.findByName('executeAPK').mustRunAfter 'cloneFlutterRepo'
}

task locExtract{
println project.baseDir.replace("\\","//")
}